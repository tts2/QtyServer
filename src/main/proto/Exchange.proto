syntax = "proto3";
package BigPack;  

option optimize_for = SPEED; // 加快解析

option java_package="com.javacgo.remote.qty.common.protocol";   //指定生成到哪个包下
option java_outer_classname="BigPack"; // 外部类名

//protobuf 可以使用message 管理其他的message 
message Exchange {

    //定义一个枚举类型
    //在proto3 要求enum的编号从0开始
    enum DataType {
        //心跳
        TypeHeartbeat = 0 ;
        //注册主机信息
        TypeRegisterHost = 1;
        //回复注册情况
        TypeReplyRegisterDetails = 2 ;
		//查询主机
		TypeQueryHost = 3 ;
		//主机发现回复
		TypeResponseHost = 4;
		//请求认证
        TypeRequestAuth = 5 ;
		//回复认证
		TypeResponseAuth = 6 ;
		//请求桌面
		TypeRequestDesk = 7 ;
		//图片参数
		TypeImageParameters = 8 ;
		//截屏图片数据
		TypeImage = 9 ;
		//接收的瓷块
		TypeImageReceived = 10 ;
		//鼠标移动
		TypeMouseMove = 11 ;
		//鼠标按键
		TypeMouseKeys = 12 ;
		//离开通知
		TypeRequestLeaveLook = 13 ;
		//鼠标滑轮
		TypeWheelEvent = 14 ;
		//键盘
		TypeKeyBoard = 15 ;
    }

    //用data_type 来标识传的是哪一个枚举类型
    DataType dataType = 1;
	string resourceId = 2 ;
	string targetId = 3 ;
	int32 errorCode = 4 ;

    //表示每次枚举类型最多只能出现其中的一个, 节省空间
    oneof dataBody {

        CsHostInfo HostInfo = 5;
		ScReplyInfo replyInfo = 6 ;

        CsQueryHost questHost = 7 ;
        ScResponseHost responseHost = 8 ;
		
        CsRequestAuth requestAuth = 9 ;
		ScResponseAuth responseAuth = 10 ;
		
		CsDeskRequest  requestDesk = 11 ;
		ScImageParameters imageParameters = 12 ;
		ScImageInfo image = 13 ;
		CsImageReceived imageReceived = 14 ;
		
		CsMouseMove mouseMove = 15 ;
		CsMouseKeys mouseKeys = 16 ;
		CsWheelEvent wheelEvent = 17 ;

		CsKeyboard keyboard = 18 ;
    }

}

message WMHeartbeat{

}
message CsHostInfo {
    //电脑名称
    string cpuId = 1;
    //mac地址
    string mac = 2;
	//主控或者被控 1为主 2为被
	int32 activeOrpassive = 3 ; 
}
message ScReplyInfo{
    bool success = 1 ;
    string registerId = 2 ;
}

message CsQueryHost{
}

message ScResponseHost{
    bool isExist = 1 ;
}
message CsRequestAuth {
	string targetPasswd = 1  ;
}

message ScResponseAuth {
	bool success = 1 ;

}

message CsDeskRequest{
	int32 operation = 1 ;
}

message ScImageParameters{
	int32 imageWidth = 1 ;
	int32 imageHeight =2 ;
	int32 rectWidth = 3;
}
message ScImageInfo {
    int32 posX = 1 ;
    int32 posY = 2 ;
    int32 imageWidth = 3 ;
    int32 imageHeight =4 ;
    bytes m_data = 5 ;

    int32 tileNum = 6;

}
message CsImageReceived{
	int32 TileNum = 1;
}

message CsMouseMove{
	int32 posX = 1;
	int32 posY = 2;
}
message CsMouseKeys{
    int32 keyCode = 1;
    bool state = 2 ;
}
message CsWheelEvent{
    bool deltaPos =1;
}
message CsKeyboard{
    int32 keyCode = 1;
    bool state = 2 ;
}